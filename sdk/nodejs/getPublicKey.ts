// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get a public key from a PEM-encoded private key.
 *
 * Use this data source to get the public key from a [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) or [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) formatted private key, for use in other resources.
 */
export function getPublicKey(args?: GetPublicKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetPublicKeyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tls:index/getPublicKey:getPublicKey", {
        "privateKeyOpenssh": args.privateKeyOpenssh,
        "privateKeyPem": args.privateKeyPem,
    }, opts);
}

/**
 * A collection of arguments for invoking getPublicKey.
 */
export interface GetPublicKeyArgs {
    /**
     * The private key (in  [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) format) to extract the public key from. This is *mutually exclusive* with `privateKeyPem`. Currently-supported algorithms for keys are: `RSA`, `ECDSA`, `ED25519`.
     */
    privateKeyOpenssh?: string;
    /**
     * The private key (in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format) to extract the public key from. This is *mutually exclusive* with `privateKeyOpenssh`. Currently-supported algorithms for keys are: `RSA`, `ECDSA`, `ED25519`.
     */
    privateKeyPem?: string;
}

/**
 * A collection of values returned by getPublicKey.
 */
export interface GetPublicKeyResult {
    /**
     * The name of the algorithm used by the given private key. Possible values are: `RSA`, `ECDSA`, `ED25519`.
     */
    readonly algorithm: string;
    /**
     * Unique identifier for this data source: hexadecimal representation of the SHA1 checksum of the data source.
     */
    readonly id: string;
    /**
     * The private key (in  [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) format) to extract the public key from. This is *mutually exclusive* with `privateKeyPem`. Currently-supported algorithms for keys are: `RSA`, `ECDSA`, `ED25519`.
     */
    readonly privateKeyOpenssh?: string;
    /**
     * The private key (in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format) to extract the public key from. This is *mutually exclusive* with `privateKeyOpenssh`. Currently-supported algorithms for keys are: `RSA`, `ECDSA`, `ED25519`.
     */
    readonly privateKeyPem?: string;
    /**
     * The fingerprint of the public key data in OpenSSH MD5 hash format, e.g. `aa:bb:cc:...`. Only available if the selected private key format is compatible, as per the rules for `publicKeyOpenssh` and ECDSA P224 limitations.
     */
    readonly publicKeyFingerprintMd5: string;
    /**
     * The fingerprint of the public key data in OpenSSH SHA256 hash format, e.g. `SHA256:...`. Only available if the selected private key format is compatible, as per the rules for `publicKeyOpenssh` and ECDSA P224 limitations.
     */
    readonly publicKeyFingerprintSha256: string;
    /**
     * The public key, in  OpenSSH PEM (RFC 4716).
     */
    readonly publicKeyOpenssh: string;
    /**
     * The public key, in PEM (RFC 1421).
     */
    readonly publicKeyPem: string;
}
/**
 * Get a public key from a PEM-encoded private key.
 *
 * Use this data source to get the public key from a [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) or [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) formatted private key, for use in other resources.
 */
export function getPublicKeyOutput(args?: GetPublicKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPublicKeyResult> {
    return pulumi.output(args).apply((a: any) => getPublicKey(a, opts))
}

/**
 * A collection of arguments for invoking getPublicKey.
 */
export interface GetPublicKeyOutputArgs {
    /**
     * The private key (in  [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) format) to extract the public key from. This is *mutually exclusive* with `privateKeyPem`. Currently-supported algorithms for keys are: `RSA`, `ECDSA`, `ED25519`.
     */
    privateKeyOpenssh?: pulumi.Input<string>;
    /**
     * The private key (in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format) to extract the public key from. This is *mutually exclusive* with `privateKeyOpenssh`. Currently-supported algorithms for keys are: `RSA`, `ECDSA`, `ED25519`.
     */
    privateKeyPem?: pulumi.Input<string>;
}
