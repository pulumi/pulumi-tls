// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.tls.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertRequestSubjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertRequestSubjectArgs Empty = new CertRequestSubjectArgs();

    @Import(name="commonName")
    private @Nullable Output<String> commonName;

    public Optional<Output<String>> commonName() {
        return Optional.ofNullable(this.commonName);
    }

    @Import(name="country")
    private @Nullable Output<String> country;

    public Optional<Output<String>> country() {
        return Optional.ofNullable(this.country);
    }

    @Import(name="locality")
    private @Nullable Output<String> locality;

    public Optional<Output<String>> locality() {
        return Optional.ofNullable(this.locality);
    }

    @Import(name="organization")
    private @Nullable Output<String> organization;

    public Optional<Output<String>> organization() {
        return Optional.ofNullable(this.organization);
    }

    @Import(name="organizationalUnit")
    private @Nullable Output<String> organizationalUnit;

    public Optional<Output<String>> organizationalUnit() {
        return Optional.ofNullable(this.organizationalUnit);
    }

    @Import(name="postalCode")
    private @Nullable Output<String> postalCode;

    public Optional<Output<String>> postalCode() {
        return Optional.ofNullable(this.postalCode);
    }

    @Import(name="province")
    private @Nullable Output<String> province;

    public Optional<Output<String>> province() {
        return Optional.ofNullable(this.province);
    }

    @Import(name="serialNumber")
    private @Nullable Output<String> serialNumber;

    public Optional<Output<String>> serialNumber() {
        return Optional.ofNullable(this.serialNumber);
    }

    @Import(name="streetAddresses")
    private @Nullable Output<List<String>> streetAddresses;

    public Optional<Output<List<String>>> streetAddresses() {
        return Optional.ofNullable(this.streetAddresses);
    }

    private CertRequestSubjectArgs() {}

    private CertRequestSubjectArgs(CertRequestSubjectArgs $) {
        this.commonName = $.commonName;
        this.country = $.country;
        this.locality = $.locality;
        this.organization = $.organization;
        this.organizationalUnit = $.organizationalUnit;
        this.postalCode = $.postalCode;
        this.province = $.province;
        this.serialNumber = $.serialNumber;
        this.streetAddresses = $.streetAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertRequestSubjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertRequestSubjectArgs $;

        public Builder() {
            $ = new CertRequestSubjectArgs();
        }

        public Builder(CertRequestSubjectArgs defaults) {
            $ = new CertRequestSubjectArgs(Objects.requireNonNull(defaults));
        }

        public Builder commonName(@Nullable Output<String> commonName) {
            $.commonName = commonName;
            return this;
        }

        public Builder commonName(String commonName) {
            return commonName(Output.of(commonName));
        }

        public Builder country(@Nullable Output<String> country) {
            $.country = country;
            return this;
        }

        public Builder country(String country) {
            return country(Output.of(country));
        }

        public Builder locality(@Nullable Output<String> locality) {
            $.locality = locality;
            return this;
        }

        public Builder locality(String locality) {
            return locality(Output.of(locality));
        }

        public Builder organization(@Nullable Output<String> organization) {
            $.organization = organization;
            return this;
        }

        public Builder organization(String organization) {
            return organization(Output.of(organization));
        }

        public Builder organizationalUnit(@Nullable Output<String> organizationalUnit) {
            $.organizationalUnit = organizationalUnit;
            return this;
        }

        public Builder organizationalUnit(String organizationalUnit) {
            return organizationalUnit(Output.of(organizationalUnit));
        }

        public Builder postalCode(@Nullable Output<String> postalCode) {
            $.postalCode = postalCode;
            return this;
        }

        public Builder postalCode(String postalCode) {
            return postalCode(Output.of(postalCode));
        }

        public Builder province(@Nullable Output<String> province) {
            $.province = province;
            return this;
        }

        public Builder province(String province) {
            return province(Output.of(province));
        }

        public Builder serialNumber(@Nullable Output<String> serialNumber) {
            $.serialNumber = serialNumber;
            return this;
        }

        public Builder serialNumber(String serialNumber) {
            return serialNumber(Output.of(serialNumber));
        }

        public Builder streetAddresses(@Nullable Output<List<String>> streetAddresses) {
            $.streetAddresses = streetAddresses;
            return this;
        }

        public Builder streetAddresses(List<String> streetAddresses) {
            return streetAddresses(Output.of(streetAddresses));
        }

        public Builder streetAddresses(String... streetAddresses) {
            return streetAddresses(List.of(streetAddresses));
        }

        public CertRequestSubjectArgs build() {
            return $;
        }
    }

}
