// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.tls.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCertificateCertificate {
    private final String certPem;
    private final Boolean isCa;
    private final String issuer;
    private final String notAfter;
    private final String notBefore;
    private final String publicKeyAlgorithm;
    private final String serialNumber;
    private final String sha1Fingerprint;
    private final String signatureAlgorithm;
    private final String subject;
    private final Integer version;

    @CustomType.Constructor
    private GetCertificateCertificate(
        @CustomType.Parameter("certPem") String certPem,
        @CustomType.Parameter("isCa") Boolean isCa,
        @CustomType.Parameter("issuer") String issuer,
        @CustomType.Parameter("notAfter") String notAfter,
        @CustomType.Parameter("notBefore") String notBefore,
        @CustomType.Parameter("publicKeyAlgorithm") String publicKeyAlgorithm,
        @CustomType.Parameter("serialNumber") String serialNumber,
        @CustomType.Parameter("sha1Fingerprint") String sha1Fingerprint,
        @CustomType.Parameter("signatureAlgorithm") String signatureAlgorithm,
        @CustomType.Parameter("subject") String subject,
        @CustomType.Parameter("version") Integer version) {
        this.certPem = certPem;
        this.isCa = isCa;
        this.issuer = issuer;
        this.notAfter = notAfter;
        this.notBefore = notBefore;
        this.publicKeyAlgorithm = publicKeyAlgorithm;
        this.serialNumber = serialNumber;
        this.sha1Fingerprint = sha1Fingerprint;
        this.signatureAlgorithm = signatureAlgorithm;
        this.subject = subject;
        this.version = version;
    }

    public String certPem() {
        return this.certPem;
    }
    public Boolean isCa() {
        return this.isCa;
    }
    public String issuer() {
        return this.issuer;
    }
    public String notAfter() {
        return this.notAfter;
    }
    public String notBefore() {
        return this.notBefore;
    }
    public String publicKeyAlgorithm() {
        return this.publicKeyAlgorithm;
    }
    public String serialNumber() {
        return this.serialNumber;
    }
    public String sha1Fingerprint() {
        return this.sha1Fingerprint;
    }
    public String signatureAlgorithm() {
        return this.signatureAlgorithm;
    }
    public String subject() {
        return this.subject;
    }
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateCertificate defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String certPem;
        private Boolean isCa;
        private String issuer;
        private String notAfter;
        private String notBefore;
        private String publicKeyAlgorithm;
        private String serialNumber;
        private String sha1Fingerprint;
        private String signatureAlgorithm;
        private String subject;
        private Integer version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCertificateCertificate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certPem = defaults.certPem;
    	      this.isCa = defaults.isCa;
    	      this.issuer = defaults.issuer;
    	      this.notAfter = defaults.notAfter;
    	      this.notBefore = defaults.notBefore;
    	      this.publicKeyAlgorithm = defaults.publicKeyAlgorithm;
    	      this.serialNumber = defaults.serialNumber;
    	      this.sha1Fingerprint = defaults.sha1Fingerprint;
    	      this.signatureAlgorithm = defaults.signatureAlgorithm;
    	      this.subject = defaults.subject;
    	      this.version = defaults.version;
        }

        public Builder certPem(String certPem) {
            this.certPem = Objects.requireNonNull(certPem);
            return this;
        }
        public Builder isCa(Boolean isCa) {
            this.isCa = Objects.requireNonNull(isCa);
            return this;
        }
        public Builder issuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }
        public Builder notAfter(String notAfter) {
            this.notAfter = Objects.requireNonNull(notAfter);
            return this;
        }
        public Builder notBefore(String notBefore) {
            this.notBefore = Objects.requireNonNull(notBefore);
            return this;
        }
        public Builder publicKeyAlgorithm(String publicKeyAlgorithm) {
            this.publicKeyAlgorithm = Objects.requireNonNull(publicKeyAlgorithm);
            return this;
        }
        public Builder serialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        public Builder sha1Fingerprint(String sha1Fingerprint) {
            this.sha1Fingerprint = Objects.requireNonNull(sha1Fingerprint);
            return this;
        }
        public Builder signatureAlgorithm(String signatureAlgorithm) {
            this.signatureAlgorithm = Objects.requireNonNull(signatureAlgorithm);
            return this;
        }
        public Builder subject(String subject) {
            this.subject = Objects.requireNonNull(subject);
            return this;
        }
        public Builder version(Integer version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }        public GetCertificateCertificate build() {
            return new GetCertificateCertificate(certPem, isCa, issuer, notAfter, notBefore, publicKeyAlgorithm, serialNumber, sha1Fingerprint, signatureAlgorithm, subject, version);
        }
    }
}
