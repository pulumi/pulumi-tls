// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-tls/sdk/v5/go/tls/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type Proxy struct {
	// When `true` the provider will discover the proxy configuration from environment variables. This is based upon [`http.ProxyFromEnvironment`](https://pkg.go.dev/net/http#ProxyFromEnvironment) and it supports the same environment variables (default: `true`).
	FromEnv *bool `pulumi:"fromEnv"`
	// Password used for Basic authentication against the Proxy.
	Password *string `pulumi:"password"`
	// URL used to connect to the Proxy. Accepted schemes are: `http`, `https`, `socks5`.
	Url *string `pulumi:"url"`
	// Username (or Token) used for Basic authentication against the Proxy.
	Username *string `pulumi:"username"`
}

// ProxyInput is an input type that accepts ProxyArgs and ProxyOutput values.
// You can construct a concrete instance of `ProxyInput` via:
//
//	ProxyArgs{...}
type ProxyInput interface {
	pulumi.Input

	ToProxyOutput() ProxyOutput
	ToProxyOutputWithContext(context.Context) ProxyOutput
}

type ProxyArgs struct {
	// When `true` the provider will discover the proxy configuration from environment variables. This is based upon [`http.ProxyFromEnvironment`](https://pkg.go.dev/net/http#ProxyFromEnvironment) and it supports the same environment variables (default: `true`).
	FromEnv pulumi.BoolPtrInput `pulumi:"fromEnv"`
	// Password used for Basic authentication against the Proxy.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// URL used to connect to the Proxy. Accepted schemes are: `http`, `https`, `socks5`.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Username (or Token) used for Basic authentication against the Proxy.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Proxy)(nil)).Elem()
}

func (i ProxyArgs) ToProxyOutput() ProxyOutput {
	return i.ToProxyOutputWithContext(context.Background())
}

func (i ProxyArgs) ToProxyOutputWithContext(ctx context.Context) ProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyOutput)
}

type ProxyOutput struct{ *pulumi.OutputState }

func (ProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Proxy)(nil)).Elem()
}

func (o ProxyOutput) ToProxyOutput() ProxyOutput {
	return o
}

func (o ProxyOutput) ToProxyOutputWithContext(ctx context.Context) ProxyOutput {
	return o
}

// When `true` the provider will discover the proxy configuration from environment variables. This is based upon [`http.ProxyFromEnvironment`](https://pkg.go.dev/net/http#ProxyFromEnvironment) and it supports the same environment variables (default: `true`).
func (o ProxyOutput) FromEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Proxy) *bool { return v.FromEnv }).(pulumi.BoolPtrOutput)
}

// Password used for Basic authentication against the Proxy.
func (o ProxyOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Proxy) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// URL used to connect to the Proxy. Accepted schemes are: `http`, `https`, `socks5`.
func (o ProxyOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Proxy) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Username (or Token) used for Basic authentication against the Proxy.
func (o ProxyOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Proxy) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyInput)(nil)).Elem(), ProxyArgs{})
	pulumi.RegisterOutputType(ProxyOutput{})
}
