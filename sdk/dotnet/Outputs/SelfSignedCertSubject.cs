// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tls.Outputs
{

    [OutputType]
    public sealed class SelfSignedCertSubject
    {
        /// <summary>
        /// Distinguished name: `CN`
        /// </summary>
        public readonly string? CommonName;
        /// <summary>
        /// Distinguished name: `C`
        /// </summary>
        public readonly string? Country;
        /// <summary>
        /// ASN.1 Object Identifier (OID): `1.2.840.113549.1.9.1`
        /// </summary>
        public readonly string? EmailAddress;
        /// <summary>
        /// Distinguished name: `L`
        /// </summary>
        public readonly string? Locality;
        /// <summary>
        /// Distinguished name: `O`
        /// </summary>
        public readonly string? Organization;
        /// <summary>
        /// Distinguished name: `OU`
        /// </summary>
        public readonly string? OrganizationalUnit;
        /// <summary>
        /// Distinguished name: `PC`
        /// </summary>
        public readonly string? PostalCode;
        /// <summary>
        /// Distinguished name: `ST`
        /// </summary>
        public readonly string? Province;
        /// <summary>
        /// Distinguished name: `SERIALNUMBER`
        /// </summary>
        public readonly string? SerialNumber;
        /// <summary>
        /// Distinguished name: `STREET`
        /// </summary>
        public readonly ImmutableArray<string> StreetAddresses;

        [OutputConstructor]
        private SelfSignedCertSubject(
            string? commonName,

            string? country,

            string? emailAddress,

            string? locality,

            string? organization,

            string? organizationalUnit,

            string? postalCode,

            string? province,

            string? serialNumber,

            ImmutableArray<string> streetAddresses)
        {
            CommonName = commonName;
            Country = country;
            EmailAddress = emailAddress;
            Locality = locality;
            Organization = organization;
            OrganizationalUnit = organizationalUnit;
            PostalCode = postalCode;
            Province = province;
            SerialNumber = serialNumber;
            StreetAddresses = streetAddresses;
        }
    }
}
