// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tls
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to get the public key from a PEM-encoded private key for use in other
        /// resources.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-tls/blob/master/website/docs/d/public_key.html.markdown.
        /// </summary>
        public static Task<GetPublicKeyResult> GetPublicKey(GetPublicKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPublicKeyResult>("tls:index/getPublicKey:getPublicKey", args, options.WithVersion());
    }

    public sealed class GetPublicKeyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The private key to use. Currently-supported key types are "RSA" or "ECDSA".
        /// </summary>
        [Input("privateKeyPem", required: true)]
        public Input<string> PrivateKeyPem { get; set; } = null!;

        public GetPublicKeyArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetPublicKeyResult
    {
        public readonly string Algorithm;
        /// <summary>
        /// The private key data in PEM format.
        /// </summary>
        public readonly string PrivateKeyPem;
        /// <summary>
        /// The md5 hash of the public key data in
        /// OpenSSH MD5 hash format, e.g. `aa:bb:cc:...`. Only available if the
        /// selected private key format is compatible, as per the rules for
        /// `public_key_openssh`.
        /// </summary>
        public readonly string PublicKeyFingerprintMd5;
        /// <summary>
        /// The public key data in OpenSSH `authorized_keys`
        /// format, if the selected private key format is compatible. All RSA keys
        /// are supported, and ECDSA keys with curves "P256", "P384" and "P521"
        /// are supported. This attribute is empty if an incompatible ECDSA curve
        /// is selected.
        /// </summary>
        public readonly string PublicKeyOpenssh;
        /// <summary>
        /// The public key data in PEM format.
        /// </summary>
        public readonly string PublicKeyPem;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetPublicKeyResult(
            string algorithm,
            string privateKeyPem,
            string publicKeyFingerprintMd5,
            string publicKeyOpenssh,
            string publicKeyPem,
            string id)
        {
            Algorithm = algorithm;
            PrivateKeyPem = privateKeyPem;
            PublicKeyFingerprintMd5 = publicKeyFingerprintMd5;
            PublicKeyOpenssh = publicKeyOpenssh;
            PublicKeyPem = publicKeyPem;
            Id = id;
        }
    }
}
